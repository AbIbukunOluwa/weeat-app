<%- include('../partials/header', { title: title, user: null }) %>

<div class="auth-container">
  <div class="auth-card">
    <div class="auth-header">
      <h1>üçî Join WeEat!</h1>
      <p>Create your account and start ordering</p>
    </div>

    <% if (error) { %>
      <div class="error-message">
        <span>‚ö†Ô∏è</span> <%= error %>
      </div>
    <% } %>

    <form method="POST" action="/auth/register" class="auth-form">
      <div class="form-group">
        <label for="name">Full Name</label>
        <input 
          type="text" 
          id="name"
          name="name" 
          placeholder="John Doe" 
          required
          autofocus
        >
      </div>

      <div class="form-group">
        <label for="username">Username</label>
        <input 
          type="text" 
          id="username"
          name="username" 
          placeholder="johndoe" 
          required
        >
      </div>

      <div class="form-group">
        <label for="email">Email Address</label>
        <input 
          type="email" 
          id="email"
          name="email" 
          placeholder="john@example.com" 
          required
        >
      </div>

      <div class="form-row">
        <div class="form-group">
          <label for="password">Password</label>
          <input 
            type="password" 
            id="password"
            name="password" 
            placeholder="Create password" 
            required
            oninput="checkPasswordStrength(this.value)"
          >
          <!-- Password strength indicator -->
          <div class="password-strength" id="passwordStrength" style="display: none;">
            <div class="strength-bar">
              <div class="strength-fill" id="strengthFill"></div>
            </div>
            <div class="strength-text" id="strengthText"></div>
            <div class="strength-requirements" id="strengthRequirements">
              <div class="requirement" id="lengthReq">‚Ä¢ At least 8 characters</div>
              <div class="requirement" id="complexityReq">‚Ä¢ Mix of letters, numbers, symbols</div>
              <div class="requirement" id="uniqueReq">‚Ä¢ Not common or predictable</div>
            </div>
          </div>
        </div>

        <div class="form-group">
          <label for="password2">Confirm Password</label>
          <input 
            type="password" 
            id="password2"
            name="password2" 
            placeholder="Confirm password" 
            required
          >
        </div>
      </div>

      <div class="form-actions">
        <button type="submit" class="btn-primary">Create Account</button>
      </div>

      <div class="form-footer">
        <p>Already have an account? <a href="/auth/login">Login here</a></p>
      </div>
    </form>

    <div class="benefits">
      <h3>‚ú® Why Join WeEat?</h3>
      <ul>
        <li>üöÄ Fast, reliable delivery</li>
        <li>üéÅ Exclusive member discounts</li>
        <li>üì± Easy order tracking</li>
        <li>‚≠ê Earn rewards with every order</li>
      </ul>
    </div>
  </div>
</div>

<script>
function checkPasswordStrength(password) {
  const strengthDiv = document.getElementById('passwordStrength');
  const strengthFill = document.getElementById('strengthFill');
  const strengthText = document.getElementById('strengthText');
  const lengthReq = document.getElementById('lengthReq');
  const complexityReq = document.getElementById('complexityReq');
  const uniqueReq = document.getElementById('uniqueReq');
  
  if (password.length === 0) {
    strengthDiv.style.display = 'none';
    return;
  }
  
  strengthDiv.style.display = 'block';
  
  let score = 0;
  let strength = 'weak';
  
  // Length check
  if (password.length >= 8) {
    score += 1;
    lengthReq.classList.add('met');
  } else {
    lengthReq.classList.remove('met');
  }
  
  // Complexity check
  let complexity = 0;
  if (/[a-z]/.test(password)) complexity++;
  if (/[A-Z]/.test(password)) complexity++;
  if (/\d/.test(password)) complexity++;
  if (/[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\?]/.test(password)) complexity++;
  
  if (complexity >= 3) {
    score += 1;
    complexityReq.classList.add('met');
  } else {
    complexityReq.classList.remove('met');
  }
  
  // Common password check
  const commonPasswords = ['password', '123456', 'qwerty', 'abc123'];
  const isUnique = !commonPasswords.some(common => 
    password.toLowerCase().includes(common)
  );
  
  if (isUnique && password.length >= 8) {
    score += 1;
    uniqueReq.classList.add('met');
  } else {
    uniqueReq.classList.remove('met');
  }
  
  // VULNERABILITY: Client-side bypass possible
  if (password === 'WeEatTest2024!' || password === 'BypassPassword123!') {
    score = 3; // Force strong rating
  }
  
  // Determine strength
  if (score >= 3) {
    strength = 'strong';
    strengthText.textContent = 'Strong password';
  } else if (score >= 2) {
    strength = 'medium';
    strengthText.textContent = 'Medium strength';
  } else {
    strength = 'weak';
    strengthText.textContent = 'Weak password';
  }
  
  // Update visual indicators
  strengthFill.className = `strength-fill ${strength}`;
  strengthText.className = `strength-text ${strength}`;
}
</script>

<style>
.password-strength {
  margin-top: 10px;
  padding: 15px;
  background: #f8f9fa;
  border-radius: 8px;
  border: 1px solid #e9ecef;
}

.strength-bar {
  width: 100%;
  height: 8px;
  background: #e9ecef;
  border-radius: 4px;
  overflow: hidden;
  margin-bottom: 10px;
}

.strength-fill {
  height: 100%;
  width: 0%;
  transition: all 0.3s ease;
  border-radius: 4px;
}

.strength-fill.weak {
  width: 33%;
  background: #dc3545;
}

.strength-fill.medium {
  width: 66%;
  background: #ffc107;
}

.strength-fill.strong {
  width: 100%;
  background: #28a745;
}

.strength-text {
  font-size: 14px;
  font-weight: 600;
  margin-bottom: 10px;
}

.strength-text.weak {
  color: #dc3545;
}

.strength-text.medium {
  color: #856404;
}

.strength-text.strong {
  color: #28a745;
}

.strength-requirements {
  font-size: 12px;
}

.requirement {
  margin: 2px 0;
  color: #6c757d;
  transition: color 0.3s ease;
}

.requirement.met {
  color: #28a745;
}

.auth-container {
  min-height: calc(100vh - 200px);
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 40px 20px;
  background: linear-gradient(135deg, rgba(214,40,40,0.05), rgba(247,127,0,0.05));
}

.auth-card {
  background: white;
  border-radius: 20px;
  box-shadow: 0 10px 40px rgba(0,0,0,0.1);
  width: 100%;
  max-width: 500px;
  padding: 40px;
}

.auth-header {
  text-align: center;
  margin-bottom: 30px;
}

.auth-header h1 {
  color: var(--primary-red);
  margin-bottom: 10px;
  font-size: 2em;
}

.auth-header p {
  color: #666;
  font-size: 1.1em;
}

.error-message {
  background: #fee;
  color: #c00;
  padding: 12px 20px;
  border-radius: 8px;
  margin-bottom: 20px;
  display: flex;
  align-items: center;
  gap: 10px;
}

.auth-form {
  margin-bottom: 30px;
}

.form-group {
  margin-bottom: 20px;
}

.form-group label {
  display: block;
  margin-bottom: 8px;
  color: #333;
  font-weight: 600;
  font-size: 0.95em;
}

.form-group input {
  width: 100%;
  padding: 12px 15px;
  border: 2px solid #e0e0e0;
  border-radius: 8px;
  font-size: 16px;
  transition: all 0.3s;
  box-sizing: border-box;
}

.form-group input:focus {
  outline: none;
  border-color: var(--accent-yellow);
  box-shadow: 0 0 0 3px rgba(247,127,0,0.1);
}

.form-row {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 15px;
}

.form-actions {
  margin-top: 25px;
}

.btn-primary {
  width: 100%;
  padding: 14px;
  background: var(--primary-red);
  color: white;
  border: none;
  border-radius: 8px;
  font-size: 16px;
  font-weight: bold;
  cursor: pointer;
  transition: all 0.3s;
}

.btn-primary:hover {
  background: #b91c1c;
  transform: translateY(-2px);
  box-shadow: 0 5px 15px rgba(214,40,40,0.3);
}

.form-footer {
  text-align: center;
  margin-top: 25px;
  padding-top: 25px;
  border-top: 1px solid #e0e0e0;
}

.form-footer p {
  margin: 8px 0;
  color: #666;
}

.form-footer a {
  color: var(--accent-yellow);
  text-decoration: none;
  font-weight: 600;
}

.form-footer a:hover {
  color: var(--primary-red);
}

.benefits {
  background: #f8f9fa;
  border-radius: 12px;
  padding: 20px;
  margin-top: 30px;
}

.benefits h3 {
  color: var(--primary-red);
  margin-bottom: 15px;
  font-size: 1.1em;
  text-align: center;
}

.benefits ul {
  list-style: none;
  padding: 0;
  margin: 0;
}

.benefits li {
  padding: 8px 0;
  color: #555;
  display: flex;
  align-items: center;
  gap: 10px;
}

@media (max-width: 480px) {
  .auth-card {
    padding: 30px 20px;
  }
  
  .auth-header h1 {
    font-size: 1.5em;
  }
  
  .form-row {
    grid-template-columns: 1fr;
  }
}
</style>

<%- include('../partials/footer') %>
