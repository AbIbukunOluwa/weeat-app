<%- include('../partials/header', { title: title, user: user }) %>

<div class="order-detail-container">
  <div class="order-detail-header">
    <h1>📦 Order Details</h1>
    <a href="/orders" class="back-link">← Back to Orders</a>
  </div>

  <div class="order-detail-card">
    <!-- Order Info Section -->
    <div class="order-info-section">
      <div class="order-badge">
        <span class="order-number">#<%= order.id.toString().padStart(6, '0') %></span>
        <span class="order-status <%= order.status %>">
          <% if (order.status === 'pending') { %>
            ⏳ Pending
          <% } else if (order.status === 'confirmed') { %>
            ✅ Confirmed
          <% } else if (order.status === 'preparing') { %>
            👨‍🍳 Preparing
          <% } else if (order.status === 'ready') { %>
            🍽️ Ready
          <% } else if (order.status === 'delivering') { %>
            🚗 Delivering
          <% } else if (order.status === 'delivered') { %>
            ✅ Delivered
          <% } else if (order.status === 'cancelled') { %>
            ❌ Cancelled
          <% } else { %>
            📦 <%= order.status %>
          <% } %>
        </span>
      </div>
      
      <div class="order-meta">
        <div class="meta-item">
          <span class="meta-label">Order Date:</span>
          <span class="meta-value">
            <%= new Date(order.createdAt).toLocaleDateString('en-US', { 
              weekday: 'long',
              year: 'numeric', 
              month: 'long', 
              day: 'numeric'
            }) %>
          </span>
        </div>
        <div class="meta-item">
          <span class="meta-label">Order Time:</span>
          <span class="meta-value">
            <%= new Date(order.createdAt).toLocaleTimeString('en-US', {
              hour: '2-digit',
              minute: '2-digit'
            }) %>
          </span>
        </div>
        <div class="meta-item">
          <span class="meta-label">Customer:</span>
          <span class="meta-value">
            <%= user.name || user.username %>
          </span>
        </div>
        <div class="meta-item">
          <span class="meta-label">Email:</span>
          <span class="meta-value"><%= user.email %></span>
        </div>
      </div>
    </div>

    <!-- Items Section -->
    <div class="order-items-section">
      <h2>Order Items</h2>
      <div class="items-table">
        <div class="table-header">
          <div class="col-item">Item</div>
          <div class="col-quantity">Qty</div>
          <div class="col-price">Price</div>
          <div class="col-subtotal">Subtotal</div>
        </div>
        
        <% 
          let items = [];
          try {
            items = typeof order.items === 'string' ? JSON.parse(order.items) : order.items;
          } catch (e) {
            items = [];
          }
        %>
        
        <% if (items && items.length > 0) { %>
          <% items.forEach(item => { %>
            <div class="table-row">
              <div class="col-item">
                <div class="item-name"><%= item.name || item.foodName %></div>
              </div>
              <div class="col-quantity">
                <span class="quantity-badge"><%= item.qty || item.quantity || 1 %></span>
              </div>
              <div class="col-price">
                $<%= (item.price || 0).toFixed(2) %>
              </div>
              <div class="col-subtotal">
                $<%= ((item.price || 0) * (item.qty || item.quantity || 1)).toFixed(2) %>
              </div>
            </div>
          <% }) %>
        <% } else { %>
          <div class="no-items">
            <p>Order details unavailable</p>
          </div>
        <% } %>
      </div>
    </div>

    <!-- Pricing Section -->
    <div class="order-pricing-section">
      <div class="pricing-breakdown">
        <div class="price-row">
          <span class="price-label">Subtotal:</span>
          <span class="price-value">$<%= order.totalAmount.toFixed(2) %></span>
        </div>
        <div class="price-row">
          <span class="price-label">Delivery Fee:</span>
          <span class="price-value">$4.99</span>
        </div>
        <div class="price-row">
          <span class="price-label">Tax (13%):</span>
          <span class="price-value">$<%= (order.totalAmount * 0.13).toFixed(2) %></span>
        </div>
        <div class="price-row total">
          <span class="price-label">Total Amount:</span>
          <span class="price-value">$<%= (order.totalAmount + 4.99 + (order.totalAmount * 0.13)).toFixed(2) %></span>
        </div>
      </div>
    </div>

    <!-- Delivery Information -->
    <div class="delivery-section">
      <h2>Delivery Information</h2>
      <div class="delivery-info">
        <div class="info-item">
          <span class="info-label">📍 Delivery Address:</span>
          <span class="info-value">
            <%= user.address || '123 Main Street, Winnipeg, MB R3B 2A3' %>
          </span>
        </div>
        <div class="info-item">
          <span class="info-label">📞 Contact Number:</span>
          <span class="info-value">
            <%= user.phone || '+1 (204) 555-0123' %>
          </span>
        </div>
        <div class="info-item">
          <span class="info-label">📝 Special Instructions:</span>
          <span class="info-value">
            <%= order.instructions || 'No special instructions' %>
          </span>
        </div>
      </div>
    </div>

    <!-- Order Progress -->
    <div class="progress-section">
      <h2>Order Progress</h2>
      <div class="progress-timeline">
        <% 
          const statuses = [
            { key: 'pending', label: 'Order Placed', icon: '📝' },
            { key: 'confirmed', label: 'Confirmed', icon: '✅' },
            { key: 'preparing', label: 'Preparing', icon: '👨‍🍳' },
            { key: 'ready', label: 'Ready', icon: '🍽️' },
            { key: 'delivering', label: 'Out for Delivery', icon: '🚗' },
            { key: 'delivered', label: 'Delivered', icon: '✅' }
          ];
          const currentIndex = statuses.findIndex(s => s.key === order.status);
        %>
        
        <div class="progress-bar">
          <div class="progress-fill" style="width: <%= ((currentIndex + 1) / statuses.length) * 100 %>%"></div>
        </div>
        
        <div class="progress-steps">
          <% statuses.forEach((status, index) => { %>
            <div class="progress-step <%= currentIndex >= index ? 'completed' : '' %>">
              <div class="step-icon"><%= status.icon %></div>
              <div class="step-label"><%= status.label %></div>
            </div>
          <% }) %>
        </div>
      </div>
    </div>

    <!-- Actions -->
    <div class="order-actions">
      <% if (order.status === 'pending' || order.status === 'confirmed') { %>
        <button onclick="cancelOrder(<%= order.id %>)" class="btn-cancel">
          ❌ Cancel Order
        </button>
      <% } %>
      
      <% if (order.status === 'delivered') { %>
        <button onclick="reorderItems(<%= order.id %>)" class="btn-reorder">
          🔄 Reorder Items
        </button>
        <button onclick="leaveReview(<%= order.id %>)" class="btn-review">
          ⭐ Leave Review
        </button>
      <% } %>
      
      <% if (order.status === 'delivering' || order.status === 'ready') { %>
        <button onclick="trackOrder(<%= order.id %>)" class="btn-track">
          📍 Track Order
        </button>
      <% } %>
      
      <button onclick="window.print()" class="btn-print">
        🖨️ Print Receipt
      </button>
      
      <button onclick="reportIssue(<%= order.id %>)" class="btn-report">
        ⚠️ Report Issue
      </button>
    </div>
  </div>
</div>

<script>
function cancelOrder(orderId) {
  if (confirm('Are you sure you want to cancel this order?')) {
    fetch(`/orders/${orderId}/cancel`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ reason: 'Customer requested cancellation' })
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        alert('✅ Order cancelled successfully');
        window.location.href = '/orders';
      } else {
        alert('❌ ' + data.error);
      }
    });
  }
}

function reorderItems(orderId) {
  if (confirm('Add all items from this order to your cart?')) {
    fetch(`/orders/${orderId}/reorder`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' }
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        alert('✅ Items added to cart!');
        window.location.href = '/cart';
      }
    });
  }
}

function trackOrder(orderId) {
  alert(`📍 Order #${orderId} Tracking\n\nYour order is on the way!\nEstimated delivery: 15-25 minutes\n\nDriver: John D.\nContact: (204) 555-0123`);
}

function leaveReview(orderId) {
  window.location.href = `/reviews?order=${orderId}`;
}

function reportIssue(orderId) {
  window.location.href = `/complaints?order=${orderId}`;
}
</script>

<style>
.order-detail-container {
  max-width: 900px;
  margin: 0 auto;
  padding: 30px 20px;
}

.order-detail-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 30px;
}

.order-detail-header h1 {
  color: var(--primary-red);
  font-size: 2em;
  margin: 0;
}

.back-link {
  color: var(--accent-yellow);
  text-decoration: none;
  font-weight: bold;
}

.order-detail-card {
  background: white;
  border-radius: 15px;
  box-shadow: 0 5px 20px rgba(0,0,0,0.1);
  overflow: hidden;
}

.order-info-section {
  padding: 30px;
  background: linear-gradient(135deg, var(--primary-red), var(--accent-yellow));
  color: white;
}

.order-badge {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 20px;
}

.order-number {
  font-size: 1.5em;
  font-weight: bold;
}

.order-status {
  padding: 8px 16px;
  background: rgba(255,255,255,0.2);
  border-radius: 20px;
  font-weight: bold;
}

.order-meta {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 15px;
}

.meta-item {
  display: flex;
  flex-direction: column;
}

.meta-label {
  opacity: 0.9;
  font-size: 0.9em;
  margin-bottom: 3px;
}

.meta-value {
  font-weight: bold;
}

.order-items-section, .order-pricing-section, .delivery-section, .progress-section {
  padding: 30px;
  border-bottom: 1px solid #f0f0f0;
}

.order-items-section h2, .delivery-section h2, .progress-section h2 {
  color: var(--primary-red);
  margin: 0 0 20px 0;
}

.items-table {
  width: 100%;
}

.table-header, .table-row {
  display: grid;
  grid-template-columns: 2fr 1fr 1fr 1fr;
  padding: 12px 0;
  align-items: center;
}

.table-header {
  font-weight: bold;
  color: #666;
  border-bottom: 2px solid #f0f0f0;
}

.table-row {
  border-bottom: 1px solid #f8f9fa;
}

.item-name {
  font-weight: 600;
  color: #333;
}

.quantity-badge {
  padding: 4px 8px;
  background: #f8f9fa;
  border-radius: 4px;
  font-weight: bold;
}

.pricing-breakdown {
  max-width: 350px;
  margin-left: auto;
}

.price-row {
  display: flex;
  justify-content: space-between;
  padding: 8px 0;
  color: #666;
}

.price-row.total {
  border-top: 2px solid #f0f0f0;
  margin-top: 10px;
  padding-top: 15px;
  font-size: 1.2em;
  font-weight: bold;
  color: var(--primary-red);
}

.delivery-info {
  display: grid;
  gap: 15px;
}

.info-item {
  display: flex;
  gap: 10px;
}

.info-label {
  font-weight: 600;
  color: #666;
}

.info-value {
  color: #333;
}

.progress-timeline {
  margin-top: 20px;
}

.progress-bar {
  height: 6px;
  background: #e9ecef;
  border-radius: 3px;
  overflow: hidden;
  margin-bottom: 30px;
}

.progress-fill {
  height: 100%;
  background: linear-gradient(90deg, var(--primary-red), var(--accent-yellow));
  transition: width 0.5s ease;
}

.progress-steps {
  display: flex;
  justify-content: space-between;
}

.progress-step {
  text-align: center;
  opacity: 0.4;
  transition: opacity 0.3s;
}

.progress-step.completed {
  opacity: 1;
}

.step-icon {
  font-size: 1.5em;
  margin-bottom: 5px;
}

.step-label {
  font-size: 0.85em;
  color: #666;
}

.order-actions {
  padding: 30px;
  display: flex;
  gap: 15px;
  flex-wrap: wrap;
  justify-content: center;
  background: #f8f9fa;
}

.order-actions button {
  padding: 12px 24px;
  border: none;
  border-radius: 8px;
  font-weight: bold;
  cursor: pointer;
  transition: all 0.3s;
}

.btn-cancel {
  background: #dc3545;
  color: white;
}

.btn-reorder {
  background: var(--accent-green);
  color: white;
}

.btn-review {
  background: var(--accent-yellow);
  color: white;
}

.btn-track {
  background: #17a2b8;
  color: white;
}

.btn-print {
  background: #6c757d;
  color: white;
}

.btn-report {
  background: #ffc107;
  color: #333;
}

.order-actions button:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0,0,0,0.15);
}

@media (max-width: 768px) {
  .order-detail-header {
    flex-direction: column;
    gap: 15px;
    text-align: center;
  }
  
  .order-meta {
    grid-template-columns: 1fr;
  }
  
  .table-header, .table-row {
    grid-template-columns: 1fr;
    text-align: center;
  }
  
  .table-header {
    display: none;
  }
  
  .table-row > div::before {
    content: attr(data-label);
    font-weight: bold;
    display: block;
    margin-bottom: 5px;
    color: #666;
  }
  
  .progress-steps {
    flex-wrap: wrap;
    gap: 15px;
  }
  
  .order-actions {
    flex-direction: column;
  }
  
  .order-actions button {
    width: 100%;
  }
}

@media print {
  .order-detail-header,
  .order-actions,
  .back-link {
    display: none;
  }
  
  .order-detail-card {
    box-shadow: none;
  }
}
</style>

<%- include('../partials/footer') %>
